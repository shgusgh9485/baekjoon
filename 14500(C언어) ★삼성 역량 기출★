#include <stdio.h>
#define MAX(a, b) (a<b ? b:a)

const char block[19][4][5]={
   {
      "1111",
      "0000",
      "0000",
      "0000",
   },
   {
      "1000",
      "1000",
      "1000",
      "1000",
   },
   {
      "1100",
      "1100",
      "0000",
      "0000",
   },
   {
      "1000",
      "1000",
      "1100",
      "0000",
   },
   {
      "0010",
      "1110",
      "0000",
      "0000",
   },
   {
      "1100",
      "0100",
      "0100",
      "0000",
   },
   {
      "1110",
      "1000",
      "0000",
      "0000",
   },
   {
      "0100",
      "0100",
      "1100",
      "0000",
   },
   {
      "1000",
      "1110",
      "0000",
      "0000",
   },
   {
      "1100",
      "1000",
      "1000",
      "0000",
   },
   {
      "1110",
      "0010",
      "0000",
      "0000",
   },
   {
      "1000",
      "1100",
      "0100",
      "0000",
   },
   {
      "0110",
      "1100",
      "0000",
      "0000",
   },
   {
      "0100",
      "1100",
      "1000",
      "0000",
   },
   {
      "1100",
      "0110",
      "0000",
      "0000",
   },
   {
      "1110",
      "0100",
      "0000",
      "0000",
   },
   {
      "1000",
      "1100",
      "1000",
      "0000",
   },
   {
      "0100",
      "1110",
      "0000",
      "0000",
   },
   {
      "0100",
      "1100",
      "0100",
      "0000",
   },
};

int get_max(int map[503][503], int i, int j, int k){
  int max=0;
  
  for(int a=0; a<4; ++a){
    for(int b=0; b<4; ++b){
      max+=(block[k][a][b]-'0')*map[i+a][j+b];
    }
  }
  
  return max;
}

int main() {
  int map[503][503];
  int N, M, max=0;

  scanf("%d %d", &N, &M);

  for(int i=0; i<N; ++i){
    for(int j=0; j<M; ++j){
      scanf("%d", &map[i][j]);
    }
  }

  for(int i=N; i<N+3; ++i){
    for(int j=0; j<M+3; ++j){
      map[i][j]=-100000;
    }
  }

  for(int i=0; i<N+3; ++i){
    for(int j=M; j<M+3; ++j){
      map[i][j]=-100000;
    }
  }

  for(int i=0; i<N; ++i){
    for(int j=0; j<M; ++j){
      for(int k=0; k<19; ++k){
        max=MAX(get_max(map, i, j, k), max);
      }
    }
  }

  printf("%d", max);
  
  return 0;
}
